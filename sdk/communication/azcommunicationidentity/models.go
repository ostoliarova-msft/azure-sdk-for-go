//go:build go1.18
// +build go1.18

// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.
// DO NOT EDIT.

package azcommunicationidentity

import "time"

// AccessToken - An access token.
type AccessToken struct {
	// REQUIRED; The expiry time of the token.
	ExpiresOn *time.Time `json:"expiresOn,omitempty"`

	// REQUIRED; The access token issued for the identity.
	Token *string `json:"token,omitempty"`
}

type AccessTokenRequest struct {
	// REQUIRED; List of scopes attached to the token.
	Scopes []*CommunicationIdentityTokenScope `json:"scopes,omitempty"`

	// Optional custom validity period of the token within [60,1440] minutes range. If not provided, the default value of 1440
// minutes (24 hours) will be used.
	ExpiresInMinutes *int32 `json:"expiresInMinutes,omitempty"`
}

// AccessTokenResult - A communication identity with access token.
type AccessTokenResult struct {
	// REQUIRED; A communication identity.
	Identity *CommunicationIdentity `json:"identity,omitempty"`

	// An access token.
	AccessToken *AccessToken `json:"accessToken,omitempty"`
}

// ClientCreateUserOptions contains the optional parameters for the Client.CreateUser method.
type ClientCreateUserOptions struct {
	// If specified, creates also a Communication Identity access token associated with the identity and containing the requested
// scopes.
	Body *CreateRequest
}

// ClientDeleteUserOptions contains the optional parameters for the Client.DeleteUser method.
type ClientDeleteUserOptions struct {
	// placeholder for future optional parameters
}

// ClientGetTokenForTeamsUserOptions contains the optional parameters for the Client.GetTokenForTeamsUser method.
type ClientGetTokenForTeamsUserOptions struct {
	// placeholder for future optional parameters
}

// ClientGetTokenOptions contains the optional parameters for the Client.GetToken method.
type ClientGetTokenOptions struct {
	// placeholder for future optional parameters
}

// ClientRevokeTokensOptions contains the optional parameters for the Client.RevokeTokens method.
type ClientRevokeTokensOptions struct {
	// placeholder for future optional parameters
}

// CommunicationError - The Communication Services error.
type CommunicationError struct {
	// REQUIRED; The error code.
	Code *string `json:"code,omitempty"`

	// REQUIRED; The error message.
	Message *string `json:"message,omitempty"`

	// READ-ONLY; Further details about specific errors that led to this error.
	Details []*CommunicationError `json:"details,omitempty" azure:"ro"`

	// READ-ONLY; The inner error if any.
	InnerError *CommunicationError `json:"innererror,omitempty" azure:"ro"`

	// READ-ONLY; The error target.
	Target *string `json:"target,omitempty" azure:"ro"`
}

// CommunicationErrorResponse - The Communication Services error.
type CommunicationErrorResponse struct {
	// REQUIRED; The Communication Services error.
	Error *CommunicationError `json:"error,omitempty"`
}

// CommunicationIdentity - A communication identity.
type CommunicationIdentity struct {
	// REQUIRED; Identifier of the identity.
	ID *string `json:"id,omitempty"`
}

type CreateRequest struct {
	// Optional custom validity period of the token within [60,1440] minutes range. If not provided, the default value of 1440
// minutes (24 hours) will be used.
	ExpiresInMinutes *int32 `json:"expiresInMinutes,omitempty"`

	// Also create access token for the created identity.
	Scopes []*CommunicationIdentityTokenScope `json:"Scopes,omitempty"`
}

type GetTokenForTeamsUserRequest struct {
	// Client ID of an Azure AD application to be verified against the appid claim in the Azure AD access token.
	ClientID *string `json:"appId,omitempty"`

	// Azure AD access token of a Teams User to acquire a new Communication Identity access token.
	TeamsUserAADToken *string `json:"token,omitempty"`

	// Object ID of an Azure AD user (Teams User) to be verified against the oid claim in the Azure AD access token.
	UserObjectID *string `json:"userId,omitempty"`
}

