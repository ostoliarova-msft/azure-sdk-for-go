//go:build go1.18
// +build go1.18

// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
// http://www.apache.org/licenses/LICENSE-2.0
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
// Code generated by Microsoft (R) AutoRest Code Generator.Changes may cause incorrect behavior and will be lost if the code
// is regenerated.
// DO NOT EDIT.

package identity

import "time"

// CommunicationError - The Communication Services error.
type CommunicationError struct {
	// REQUIRED; The error code.
	Code *string `json:"code,omitempty"`

	// REQUIRED; The error message.
	Message *string `json:"message,omitempty"`

	// READ-ONLY; Further details about specific errors that led to this error.
	Details []*CommunicationError `json:"details,omitempty" azure:"ro"`

	// READ-ONLY; The inner error if any.
	InnerError *CommunicationError `json:"innererror,omitempty" azure:"ro"`

	// READ-ONLY; The error target.
	Target *string `json:"target,omitempty" azure:"ro"`
}

// CommunicationErrorResponse - The Communication Services error.
type CommunicationErrorResponse struct {
	// REQUIRED; The Communication Services error.
	Error *CommunicationError `json:"error,omitempty"`
}

// CommunicationIdentity - A communication identity.
type CommunicationIdentity struct {
	// REQUIRED; Identifier of the identity.
	ID *string `json:"id,omitempty"`
}

// CommunicationIdentityAccessToken - An access token.
type CommunicationIdentityAccessToken struct {
	// REQUIRED; The expiry time of the token.
	ExpiresOn *time.Time `json:"expiresOn,omitempty"`

	// REQUIRED; The access token issued for the identity.
	Token *string `json:"token,omitempty"`
}

type CommunicationIdentityAccessTokenRequest struct {
	// REQUIRED; List of scopes attached to the token.
	Scopes []*CommunicationIdentityTokenScope `json:"scopes,omitempty"`

	// Optional custom validity period of the token within [60,1440] minutes range. If not provided, the default value of 1440
// minutes (24 hours) will be used.
	ExpiresInMinutes *int32 `json:"expiresInMinutes,omitempty"`
}

// CommunicationIdentityAccessTokenResult - A communication identity with access token.
type CommunicationIdentityAccessTokenResult struct {
	// REQUIRED; A communication identity.
	Identity *CommunicationIdentity `json:"identity,omitempty"`

	// An access token.
	AccessToken *CommunicationIdentityAccessToken `json:"accessToken,omitempty"`
}

// CommunicationIdentityClientCreateOptions contains the optional parameters for the CommunicationIdentityClient.Create method.
type CommunicationIdentityClientCreateOptions struct {
	// If specified, creates also a Communication Identity access token associated with the identity and containing the requested
// scopes.
	Body *CommunicationIdentityCreateRequest
}

// CommunicationIdentityClientDeleteOptions contains the optional parameters for the CommunicationIdentityClient.Delete method.
type CommunicationIdentityClientDeleteOptions struct {
	// placeholder for future optional parameters
}

// CommunicationIdentityClientExchangeTeamsUserAccessTokenOptions contains the optional parameters for the CommunicationIdentityClient.ExchangeTeamsUserAccessToken
// method.
type CommunicationIdentityClientExchangeTeamsUserAccessTokenOptions struct {
	// placeholder for future optional parameters
}

// CommunicationIdentityClientIssueAccessTokenOptions contains the optional parameters for the CommunicationIdentityClient.IssueAccessToken
// method.
type CommunicationIdentityClientIssueAccessTokenOptions struct {
	// placeholder for future optional parameters
}

// CommunicationIdentityClientRevokeAccessTokensOptions contains the optional parameters for the CommunicationIdentityClient.RevokeAccessTokens
// method.
type CommunicationIdentityClientRevokeAccessTokensOptions struct {
	// placeholder for future optional parameters
}

type CommunicationIdentityCreateRequest struct {
	// Also create access token for the created identity.
	CreateTokenWithScopes []*CommunicationIdentityTokenScope `json:"createTokenWithScopes,omitempty"`

	// Optional custom validity period of the token within [60,1440] minutes range. If not provided, the default value of 1440
// minutes (24 hours) will be used.
	ExpiresInMinutes *int32 `json:"expiresInMinutes,omitempty"`
}

type TeamsUserExchangeTokenRequest struct {
	// REQUIRED; Client ID of an Azure AD application to be verified against the appid claim in the Azure AD access token.
	AppID *string `json:"appId,omitempty"`

	// REQUIRED; Azure AD access token of a Teams User to acquire a new Communication Identity access token.
	Token *string `json:"token,omitempty"`

	// REQUIRED; Object ID of an Azure AD user (Teams User) to be verified against the oid claim in the Azure AD access token.
	UserID *string `json:"userId,omitempty"`
}

